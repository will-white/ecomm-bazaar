/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CartImport } from './routes/cart'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as UserIndexImport } from './routes/user_/index'
import { Route as VendorIdImport } from './routes/vendor.$id'
import { Route as UserProfileImport } from './routes/user_/profile'
import { Route as UserPrivacyImport } from './routes/user_/privacy'
import { Route as UserAddressesImport } from './routes/user_/addresses'
import { Route as ProfileIdImport } from './routes/profile.$id'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create/Update Routes

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any)

const VendorIdRoute = VendorIdImport.update({
  path: '/vendor/$id',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileRoute = UserProfileImport.update({
  path: '/user/profile',
  getParentRoute: () => rootRoute,
} as any)

const UserPrivacyRoute = UserPrivacyImport.update({
  path: '/user/privacy',
  getParentRoute: () => rootRoute,
} as any)

const UserAddressesRoute = UserAddressesImport.update({
  path: '/user/addresses',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/profile/$id': {
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/user/addresses': {
      preLoaderRoute: typeof UserAddressesImport
      parentRoute: typeof rootRoute
    }
    '/user/privacy': {
      preLoaderRoute: typeof UserPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/user/profile': {
      preLoaderRoute: typeof UserProfileImport
      parentRoute: typeof rootRoute
    }
    '/vendor/$id': {
      preLoaderRoute: typeof VendorIdImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([AuthLoginRoute, AuthRegisterRoute]),
  CartRoute,
  ProfileIdRoute,
  UserAddressesRoute,
  UserPrivacyRoute,
  UserProfileRoute,
  VendorIdRoute,
  UserIndexRoute,
])

/* prettier-ignore-end */
