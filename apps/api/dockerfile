###################
# BUILD
###################
FROM node:20-alpine As build

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Use the node user from the image (instead of the root user)
USER node
WORKDIR /usr/src/app
COPY --chown=node:node package*.json pnpm*.yaml ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
COPY --chown=node:node . .
ENV NODE_ENV production
RUN pnpm run build

RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm prune --prod
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm store prune

###################
# RUNTIME
###################
# Saved ~15MB from node:20-alpine alone
FROM alpine:latest

RUN apk add --update nodejs npm \
    && rm -rf /var/cache/apk/* \
    && addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node

COPY --chown=node:node --from=build /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=build /usr/src/app/dist ./dist
# COPY --from=build /usr/src/app/node_modules ./node_modules
# COPY --from=build /usr/src/app/dist ./dist

USER node

# Start the server using the production build
CMD [ "node", "dist/src/main.js" ]
